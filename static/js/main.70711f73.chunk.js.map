{"version":3,"sources":["img/NASA_logo_alt.svg","components/PictureCard.js","components/PictureGet.js","components/PictureArchive.js","App.js","index.js"],"names":["module","exports","PictureCard","pic","months","mediaType","media_type","useState","hide","setHide","getDate","num","url","className","title","str","dateArr","split","map","Number","formatDate","date","href","hdurl","alt","src","frameborder","allowfullscreen","onClick","undefined","copyright","explanation","PictureGet","props","history","useHistory","dateToString","day","y","getFullYear","toString","m","getMonth","d","length","setPic","Date","setDate","useEffect","axios","get","then","response","data","catch","error","alert","log","minDate","maxDate","onClickDay","newDate","push","key","PictureArchive","param","useParams","id","App","Logo","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70711f73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/NASA_logo_alt.d170aff9.svg\";","import React, { useState } from \"react\";\n\nconst PictureCard = pic => {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    const mediaType = pic.pic.media_type;\n    const [hide, setHide] = useState(true);\n    const getDate = (num) => {\n        if (num % 10 === 1 && num !== 11) {\n            return `${num}st`\n        }else if(num % 10 === 2 && num !== 12) {\n            return `${num}nd`\n        }else if(num % 10 === 3 && num !== 13) {\n            return `${num}rd`\n        }else{\n            return `${num}th`\n        }\n    }\n    const formatDate = (str='') =>{\n        const dateArr = str.split('-').map(Number);\n        return `The ${getDate(dateArr[2])} of ${months[dateArr[1]-1]}, ${dateArr[0]}`\n        \n        \n    }\n    if (!pic.pic.url) return <h3 className=\"blinking\">Loading...</h3>;\n    return (\n        <div className=\"picture-container\">\n            <div className=\"picture-title\">\n                <h2>{pic.pic.title}</h2>\n            </div>\n            <div className=\"picture-nav\">\n              \n                <div className=\"picture-date\">\n                    <p>{formatDate(pic.pic.date)}</p>\n                </div>\n               \n            </div>\n            {mediaType === 'image' &&\n            <div className=\"picture-img\">\n                <a href={pic.pic.hdurl}>\n                <img className=\"picture\" alt={pic.pic.title} src={pic.pic.url}></img>\n                </a>\n            </div>\n            }\n            {mediaType === 'video' &&\n            <div className=\"video-container\">\n                <iframe title={pic.pic.title} src={pic.pic.url} frameborder=\"0\" allowfullscreen>\n\n                </iframe>\n            </div>\n            }\n            <div className=\"explanation-container\">\n                <div className=\"explanation-header\">\n                    <button className={`expand-button ${hide ? 'expand-btn-up' : 'expand-btn-down'}`} onClick={() =>{\n                        setHide(!hide)\n                    }}>&nabla;</button>\n                    {pic.pic.copyright !== undefined &&\n                    <div className=\"copyright\">\n                <p>Copyright: {pic.pic.copyright}</p>\n                    </div>}\n                </div>\n                <div className={\n                    hide ? 'explanation-close' : 'explanation-open'\n                }>\n                    <p>{pic.pic.explanation}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default PictureCard;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PictureCard from \"./PictureCard\"\nimport Calendar from 'react-calendar';\nimport log from '../img/NASA_logo_alt.svg'\nimport { useHistory } from 'react-router-dom'\n\n\nconst PictureGet = (props) => {\n\n    const history = useHistory();\n    const dateToString = day =>{\n        var y = day.getFullYear().toString();\n        var m = (day.getMonth() + 1).toString();\n        var d = day.getDate().toString();\n        (d.length === 1) && (d = '0' + d);\n        (m.length === 1) && (m = '0' + m);\n        return `${y}-${m}-${d}`;    }\n    const [pic, setPic] = useState([]);\n    const [date, setDate] = useState(new Date())\n\n    const dayValue = day =>{\n        const newDate = dateToString(day)\n        history.push(`/${newDate}`)\n        setDate(day)\n}\n    useEffect(() => {\n\n        axios\n        .get(`https://api.nasa.gov/planetary/apod?api_key=p4C0QgA2Ec5R5E8oVlU5rXuLbdexPLk59gypoEGM&date=${dateToString(date)}`)\n        .then(response => {\n       //     console.log(response.data)\n            setPic(response.data)\n        })\n        .catch(error => alert(`${error}, Please try again later, or try selecting a different day`))\n    }, [date]);\n    return (\n        <div className=\"content-container\">\n            <div className=\"calendar-container\">\n                <div className=\"big-logo\">\n                    <img src={log} alt=\"NASA Astronomy\"></img>\n                </div>\n                <Calendar\n    \n\n                    minDate={new Date('1995-6-16')}\n                    maxDate={new Date()}\n                    onClickDay={dayValue}\n                />\n            </div>\n            <div className=\"picture-card\">\n                <PictureCard pic={pic} key={date}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default PictureGet","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PictureCard from \"./PictureCard\"\nimport Calendar from 'react-calendar';\nimport log from '../img/NASA_logo_alt.svg'\nimport { useHistory, useParams } from 'react-router-dom'\n\n\nconst PictureArchive = (props) => {\n    const param = useParams();\n    const history = useHistory();\n    const dateToString = day =>{\n        var y = day.getFullYear().toString();\n        var m = (day.getMonth() + 1).toString();\n        var d = day.getDate().toString();\n        (d.length === 1) && (d = '0' + d);\n        (m.length === 1) && (m = '0' + m);\n        return `${y}-${m}-${d}`;    }\n    const [pic, setPic] = useState([]);\n    const [date, setDate] = useState(new Date(param.id));\n\n    const dayValue = day =>{\n        const newDate = dateToString(day)\n        history.push(`/${newDate}`)\n        setDate(day)\n}\n    useEffect(() => {\n        const { id } = param;\n\n        axios\n        .get(`https://api.nasa.gov/planetary/apod?api_key=p4C0QgA2Ec5R5E8oVlU5rXuLbdexPLk59gypoEGM&date=${id}`)\n        .then(response => {\n       //     console.log(response.data)\n            setPic(response.data)\n        })\n        .catch(error => alert(`${error}, Please try again later, or try selecting a different day`))\n    }, [param]);\n    return (\n        <div className=\"content-container\">\n            <div className=\"calendar-container\">\n                <div className=\"big-logo\">\n                    <img src={log} alt=\"NASA Astronomy of the Day\"></img>\n                </div>\n                <Calendar\n\n                    minDate={new Date('1995-6-16')}\n                    maxDate={new Date()}\n                    onClickDay={dayValue}\n                />\n            </div>\n            <div className=\"picture-card\">\n                <PictureCard pic={pic} key={date}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default PictureArchive","import React from \"react\";\nimport { Route, Switch } from 'react-router-dom';\nimport \"./Calendar.css\";\nimport \"./App.css\";\nimport PictureGet from \"./components/PictureGet\";\nimport PictureArchive from \"./components/PictureArchive\"\nimport Logo from \"./img/NASA_logo_alt.svg\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"header logo-container\">\n        <div className=\"logo\">\n          <img alt=\"NASA Logo\" src={Logo}></img>\n        </div>\n        <div className=\"logo-header\">\n\n        </div>\n      </div>\n\n\n      <Switch>\n        <Route path =\"/:id\">\n     \n        <PictureArchive />\n        </Route>\n        <Route path =\"/\">\n          <PictureGet />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById(\"root\"));\n"],"sourceRoot":""}